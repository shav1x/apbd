// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tut11.Core.Database;

#nullable disable

namespace tut11.Core.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250603072554_InsertedData")]
    partial class InsertedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("tut11.Core.Data.Actor", b =>
                {
                    b.Property<int>("IdActor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdActor"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nickname")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdActor");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            IdActor = 1,
                            Name = "Tom",
                            Nickname = "Tommy",
                            Surname = "Hanks"
                        },
                        new
                        {
                            IdActor = 2,
                            Name = "Robert",
                            Nickname = "RDJ",
                            Surname = "Downey Jr."
                        });
                });

            modelBuilder.Entity("tut11.Core.Data.ActorMovie", b =>
                {
                    b.Property<int>("IdMovie")
                        .HasColumnType("int");

                    b.Property<int>("IdActor")
                        .HasColumnType("int");

                    b.Property<string>("CharacterName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdMovie", "IdActor");

                    b.HasIndex("IdActor");

                    b.ToTable("ActorMovies");

                    b.HasData(
                        new
                        {
                            IdMovie = 1,
                            IdActor = 1,
                            CharacterName = "Woody"
                        },
                        new
                        {
                            IdMovie = 2,
                            IdActor = 2,
                            CharacterName = "Tony Stark"
                        });
                });

            modelBuilder.Entity("tut11.Core.Data.AgeRating", b =>
                {
                    b.Property<int>("IdAgeRating")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAgeRating"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdAgeRating");

                    b.ToTable("AgeRatings");

                    b.HasData(
                        new
                        {
                            IdAgeRating = 1,
                            Name = "G"
                        },
                        new
                        {
                            IdAgeRating = 2,
                            Name = "PG"
                        },
                        new
                        {
                            IdAgeRating = 3,
                            Name = "PG-13"
                        },
                        new
                        {
                            IdAgeRating = 4,
                            Name = "R"
                        });
                });

            modelBuilder.Entity("tut11.Core.Data.Movie", b =>
                {
                    b.Property<int>("IdMovie")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMovie"));

                    b.Property<int>("AgeRatingId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdMovie");

                    b.HasIndex("AgeRatingId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            IdMovie = 1,
                            AgeRatingId = 1,
                            Name = "Toy Story",
                            ReleaseDate = new DateTime(1995, 11, 22, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdMovie = 2,
                            AgeRatingId = 3,
                            Name = "The Avengers",
                            ReleaseDate = new DateTime(2012, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("tut11.Core.Data.ActorMovie", b =>
                {
                    b.HasOne("tut11.Core.Data.Actor", "Actor")
                        .WithMany("ActorMovies")
                        .HasForeignKey("IdActor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("tut11.Core.Data.Movie", "Movie")
                        .WithMany("ActorMovies")
                        .HasForeignKey("IdMovie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("tut11.Core.Data.Movie", b =>
                {
                    b.HasOne("tut11.Core.Data.AgeRating", "AgeRating")
                        .WithMany()
                        .HasForeignKey("AgeRatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgeRating");
                });

            modelBuilder.Entity("tut11.Core.Data.Actor", b =>
                {
                    b.Navigation("ActorMovies");
                });

            modelBuilder.Entity("tut11.Core.Data.Movie", b =>
                {
                    b.Navigation("ActorMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
